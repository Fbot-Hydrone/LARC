name: transporting_task
root: ./
startup_window: transporting_task
pre_window: export UAV_NAME=uav1; export USV_NAME=wamv1; export WORLD_FILE=./world.yaml; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_NAME=simulation; export SENSORS="garmin_down"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch offshore_uav_pack offshore_rig.launch "world_name:=fase4"
  #- gazebo:
   #   layout: tiled
    #  panes:
     #   - waitForRos; roslaunch offshore_uav_pack offshore_rig.launch
  - status:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --pos_file `pwd`/uav1_pos.yaml --enable-rplidar --enable-bluefox-camera --enable_mechanic_gripper"
        - 'waitForRos; roslaunch offshore_uav_pack spawn_wamv1.launch; roslaunch offshore_uav_pack spawn_wamv3.launch; roslaunch offshore_uav_pack spawn_wamv2.launch; roslaunch offshore_uav_pack spawn_equip_wamv1.launch; roslaunch offshore_uav_pack spawn_equip_wamv2.launch; roslaunch offshore_uav_pack spawn_equip_wamv3.launch'
  - control:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch mrs_uav_general core.launch config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml
  - takeoff:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - transporting_task:
      layout: tiled
      panes:
        - waitForControl; sleep 15; roslaunch FURG-fase4 transporting_task.launch
